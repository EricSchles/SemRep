/*
 * VulnerabilitySignatureGenerator.hpp
 *
 * Copyright (C) 2013-2014 University of California Santa Barbara.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the  Free Software
 * Foundation, Inc., 51 Franklin Street, Suite 500, Boston, MA 02110-1335,
 * USA.
 *
 * Authors: Abdulbaki Aydin, Muath Alkhalaf
 */

#ifndef VULNERABILITYSIGNATUREGENERATOR_HPP_
#define VULNERABILITYSIGNATUREGENERATOR_HPP_

#include "StrangerAutomaton.hpp"
#include "ImageComputer.hpp"
#include "depgraph/DepGraph.hpp"

using namespace std;

class VSGenerator {
public:
	VSGenerator(string input_dep_graph_file_name, string input_field_name, string attack_pattern);
	virtual ~VSGenerator();

	StrangerAutomaton* generateVS();
	void writeVStoFile(string file_name);

	static PerfInfo perfInfo;
private:
	string dep_graph_file_name;
	string input_field_name;

	DepGraph dep_graph;
	DepGraph field_relevant_dep_graph;

	DepGraphNode* uninit_field_node;

	StrangerAutomaton* sink_auto;
	StrangerAutomaton* vs_auto;
	StrangerAutomaton* attack_pattern_auto;

	AnalysisResult analyzePostImages();
	AnalysisResult analyzePreImages(StrangerAutomaton* intersection_auto, const AnalysisResult& fwAnalysisResult);
	void message(string msg);
	void debug_auto(StrangerAutomaton* automaton, int type);
	bool enable_debug;
};


#endif /* VULNERABILITYSIGNATUREGENERATOR_HPP_ */
